Return-Path: <linux-xfs-owner@vger.kernel.org>
X-Original-To: lists+linux-xfs@lfdr.de
Delivered-To: lists+linux-xfs@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 06A593171E3
	for <lists+linux-xfs@lfdr.de>; Wed, 10 Feb 2021 22:04:50 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232487AbhBJVEa (ORCPT <rfc822;lists+linux-xfs@lfdr.de>);
        Wed, 10 Feb 2021 16:04:30 -0500
Received: from us-smtp-delivery-124.mimecast.com ([216.205.24.124]:56899 "EHLO
        us-smtp-delivery-124.mimecast.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S233009AbhBJVET (ORCPT
        <rfc822;linux-xfs@vger.kernel.org>); Wed, 10 Feb 2021 16:04:19 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1612990973;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=xk9P6dEasN8ZToBGbelxXk0DU9VLucwPVrbS6IoXDQ4=;
        b=AK7epefnWiwV9uifoX1pA0WzSXPt5Wz0LjD+yOQ9Ad9r5qCIsE6/WFZhwKMjdx/2U5Mwzj
        eqIEi1eCVQxNVbiEtQ4bcXTDAMhBtuDcVveziHQljT8qPTjrTDCaUjXAaZs/FgHQ5QiQUO
        LlxdyCHcbuf/G85YkwJxueBL4Av08Uk=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-405-3xhQsXSLOWKSi6-AbbIipA-1; Wed, 10 Feb 2021 16:02:49 -0500
X-MC-Unique: 3xhQsXSLOWKSi6-AbbIipA-1
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com [10.5.11.22])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 32E3A91273;
        Wed, 10 Feb 2021 21:02:48 +0000 (UTC)
Received: from bfoster (ovpn-113-234.rdu2.redhat.com [10.10.113.234])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id 8C97A10013D7;
        Wed, 10 Feb 2021 21:02:45 +0000 (UTC)
Date:   Wed, 10 Feb 2021 16:02:43 -0500
From:   Brian Foster <bfoster@redhat.com>
To:     kernel test robot <lkp@intel.com>
Cc:     kbuild-all@lists.01.org,
        "Darrick J. Wong" <darrick.wong@oracle.com>,
        "Darrick J. Wong" <djwong@kernel.org>,
        Allison Henderson <allison.henderson@oracle.com>,
        Christoph Hellwig <hch@lst.de>, linux-xfs@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] xfs: fix boolreturn.cocci warnings
Message-ID: <20210210210243.GB90895@bfoster>
References: <202102110412.GVAOIBVp-lkp@intel.com>
 <20210210200916.GA96657@7319c0dab462>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20210210200916.GA96657@7319c0dab462>
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
Precedence: bulk
List-ID: <linux-xfs.vger.kernel.org>
X-Mailing-List: linux-xfs@vger.kernel.org

On Thu, Feb 11, 2021 at 04:09:16AM +0800, kernel test robot wrote:
> From: kernel test robot <lkp@intel.com>
> 
> fs/xfs/xfs_log.c:1062:9-10: WARNING: return of 0/1 in function 'xfs_log_need_covered' with return type bool
> 
>  Return statements in functions returning bool should use
>  true/false instead of 1/0.
> Generated by: scripts/coccinelle/misc/boolreturn.cocci
> 
> Fixes: 37444fc4cc39 ("xfs: lift writable fs check up into log worker task")
> CC: Brian Foster <bfoster@redhat.com>
> Reported-by: kernel test robot <lkp@intel.com>
> Signed-off-by: kernel test robot <lkp@intel.com>
> ---

Reviewed-by: Brian Foster <bfoster@redhat.com>

> 
> tree:   https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git xfs-5.12-merge
> head:   560ab6c0d12ebccabb83638abe23a7875b946f9a
> commit: 37444fc4cc398266fe0f71a9c0925620d44fb76a [25/36] xfs: lift writable fs check up into log worker task
> 
>  xfs_log.c |    2 +-
>  1 file changed, 1 insertion(+), 1 deletion(-)
> 
> --- a/fs/xfs/xfs_log.c
> +++ b/fs/xfs/xfs_log.c
> @@ -1059,7 +1059,7 @@ xfs_log_need_covered(
>  	bool			needed = false;
>  
>  	if (!xlog_cil_empty(log))
> -		return 0;
> +		return false;
>  
>  	spin_lock(&log->l_icloglock);
>  	switch (log->l_covered_state) {
> 

