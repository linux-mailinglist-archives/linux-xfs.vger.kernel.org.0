Return-Path: <linux-xfs-owner@vger.kernel.org>
X-Original-To: lists+linux-xfs@lfdr.de
Delivered-To: lists+linux-xfs@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 052FD62D17E
	for <lists+linux-xfs@lfdr.de>; Thu, 17 Nov 2022 04:15:48 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234195AbiKQDPq (ORCPT <rfc822;lists+linux-xfs@lfdr.de>);
        Wed, 16 Nov 2022 22:15:46 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:44140 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234404AbiKQDPn (ORCPT
        <rfc822;linux-xfs@vger.kernel.org>); Wed, 16 Nov 2022 22:15:43 -0500
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 5BB26627F4
        for <linux-xfs@vger.kernel.org>; Wed, 16 Nov 2022 19:15:42 -0800 (PST)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id ED1F062084
        for <linux-xfs@vger.kernel.org>; Thu, 17 Nov 2022 03:15:41 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 5730BC433C1;
        Thu, 17 Nov 2022 03:15:41 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1668654941;
        bh=ItVx99U/GTCuMIYxHBgsAVml6TOsgWGzTz0g8NWnv0c=;
        h=Date:From:To:Cc:Subject:From;
        b=l1GsvdphbJ+xMPZbpt/eG92C+uEIK8gapSFuI8PDzBn685bxBefmAUKcnWy0hVPWH
         mrkEz6pcarpX346IRreI+mnRwf2NJKri3Hlv46cFE66QJyGiKPyXrotns90z4LI/58
         sn3jmBN7BCIYdQowg6V+0MSp/Ijpeb0f7WpGPlmVkRRMiZa8N3ZQMzv5i6ohq0SmPw
         bekW2OzSEdAJjp6f4lItdte8g+WPjeJ1VG3plG4V80o4/Kz2fonquJJJnUlapgRaUb
         tlzF5LhnXwRlggT2JVolL3+W9n6kCe0LZ8et9qNWs239gjuJLRwmJs5aGY4pxw94JW
         EVueYFm5eriuQ==
Date:   Wed, 16 Nov 2022 19:15:40 -0800
From:   "Darrick J. Wong" <djwong@kernel.org>
To:     djwong@kernel.org
Cc:     dchinner@redhat.com, linux-xfs@vger.kernel.org
Subject: [GIT PULL 7/7] xfs: scrub inode core when checking metadata files
Message-ID: <166865412295.2381691.4642355489538362759.stg-ugh@magnolia>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
X-Spam-Status: No, score=-7.1 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_HI,
        SPF_HELO_NONE,SPF_PASS autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-xfs.vger.kernel.org>
X-Mailing-List: linux-xfs@vger.kernel.org

Hi Darrick,

Please pull this branch with changes for xfs for 6.2-rc1.

As usual, I did a test-merge with the main upstream branch as of a few
minutes ago, and didn't see any conflicts.  Please let me know if you
encounter any problems.  Finally dug through the backlog of stg-ugh
related cruddities so that I can bring you all pull requests where the
participants all get cc'd, the revlists actually correspond to the
branches and tags that are autogenerated by the branch manager without
me having to do all that manually, etc.

--D

The following changes since commit 5eef46358fae1a6018d9f886a3ecd30e843728dd:

xfs: teach scrub to flag non-extents format cow forks (2022-11-16 15:25:05 -0800)

are available in the Git repository at:

git://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git tags/scrub-check-metadata-inode-records-6.2_2022-11-16

for you to fetch changes up to f36b954a1f1bf06b5746fea7ecf0fa639ac65324:

xfs: check inode core when scrubbing metadata files (2022-11-16 16:11:51 -0800)

----------------------------------------------------------------
xfs: scrub inode core when checking metadata files

Running the online fsck QA fuzz tests, I noticed that we were
consistently missing fuzzed records in the inode cores of the realtime
freespace files and the quota files.  This patch adds the ability to
check inode cores in xchk_metadata_inode_forks.

Signed-off-by: Darrick J. Wong <djwong@kernel.org>

----------------------------------------------------------------
Darrick J. Wong (2):
xfs: don't warn about files that are exactly s_maxbytes long
xfs: check inode core when scrubbing metadata files

fs/xfs/scrub/common.c | 40 ++++++++++++++++++++++++++++++++++------
fs/xfs/scrub/inode.c  |  2 +-
2 files changed, 35 insertions(+), 7 deletions(-)
